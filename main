#!/bin/sh

############################################
#              COURSE PROJECT              #
#                                          #
# This program allows you to add names in  #
# a text file. The information required    #
# are: First name, Surname, Address, City, #
# State and Zip.                           #
#                                          #
# The users can choose, at the menu, to    #
# create, view, search and delete contacts.#
#                                          #
# Information should be delimited by ":"   #
#                                          #
# On program exit, the contents of the     #
# file should be displayed, as well as the #
# number of entries inside.                #
############################################
# Setting the trap for kill signals

trap "trapper 1" 1 15
trap "trapper 2" 2 3

# Defining const variables
choice=foo

if [ ! $# = 1 ]; then
	echo Please enter a file name
	exit
elif [ ! -f $1 ]; then
	echo $1 does not exist
	echo "Would you like to create a file called $1? (y/n)"
	read ans
	if [ $ans = "y" ]; then
		`touch $1`
		echo $1 created!
		fname=$1
	else
		echo $1 not created. Good bye!
		exit
	fi
elif [ ! -r $1 ]; then
	echo $1 is not writable
	exit
else
	echo $1 is exists and is writable
	fname=$1
fi

trapper(){
if [ $1 = 1 ]; then
exit
elif [ $1 = 2 ]; then
	echo Do you really wish to quit?
	read ans
	if [ $ans = "y" ]; then
		exit
	else
		echo Resuming program...
	fi
fi
}

# function to create contacts
do_create(){
echo "You have chosen to create a contact"
correct=n

while [ ! $correct = "y" ]
do
	# Creating a contact
	echo -n "Please enter your First Name: "
	read name
	echo -n "Please enter your Surname: "
	read sname
	echo -n "Please enter your Address: "
	read addr
	echo -n "Please enter your City: "
	read city
	echo -n "Please enter your State: "
	read state
	echo -n "Please enter your Zip: "
	read zip

	echo "Is the following information correct?"
	echo Name: $name
	echo Surname: $sname
	echo Address: $addr
	echo City: $city
	echo State: $state
	echo Zip: $zip

	read correct
done        	
	# Writing contents to a file
	if [ -f $fname ]; then
        	echo -e $name:$sname:$addr:$city:$state:$zip >> $fname
	else
		echo -e $name:$sname:$addr:$city:$state:$zip > $fname
	fi
}

# function to view all contacts
do_view(){
echo "You have chosen to view all contacts"
	
	# View a contact
	cat names.dat | sort -t ":" -k2 | awk -F : '{printf "\n%-14.14s %-16.16s %-20.20s %-15.15s %-6.6s %-5.5s\n", $1, $2, $3, $4, $5, $6}'
	echo `printf "\n"`
	echo Number of entries: `cat names.dat | wc -l`
	echo `printf "\n"`
}

# function to search for contacts
do_search(){
echo "You have chosen to search for a contact"
	
	echo Enter a string to search
	read searchstring
	echo `cat $fname | grep "$searchstring" > /tmp/search_results.$$`
	echo `cat /tmp/search_results.$$`
	echo `printf "\n"`
	echo Do you wish to delete these results?
	read ans
	if [ $ans = "y" ]; then
		sed -e "/$searchstring/d" $fname > /tmp/deleted.$$
		cat /tmp/deleted.$$ > $fname
		echo Entries deleted
	else
		echo Entries not deleted
	fi
}

while [ ! $choice = "q" ]
do

# getting action choice from the user
echo "Please enter your choice of action:"
echo "1) Create a contact"
echo "2) View all contacts"
echo "3) Search a contact"
echo "q to quit"

read choice

case $choice in
	1) do_create;;
	2) do_view;;
	3) do_search;;

	q) echo "Good bye!";;

	*) echo "Invalid choice!"; exit;
esac

done
